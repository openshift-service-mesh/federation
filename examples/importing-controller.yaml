apiVersion: v1
kind: ServiceAccount
metadata:
  name: federation-controller
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: federation-controller
rules:
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: federation-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: federation-controller
subjects:
  - kind: ServiceAccount
    name: federation-controller
    namespace: istio-system
---
apiVersion: v1
kind: Service
metadata:
  name: federation-controller
spec:
  ports:
  - name: grpc-mcp
    port: 15010
    targetPort: grpc-mcp
    protocol: TCP
    appProtocol: grpc
  selector:
    app.kubernetes.io/name: federation-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: federation-controller
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: federation-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: federation-controller
    spec:
      serviceAccount: federation-controller
      containers:
      - name: server
        image: quay.io/jewertow/federation-controller:latest
        args:
        - --meshPeers
        - '{"local":{"controlPlane":{"namespace":"istio-system"}},"remote":{"dataPlane":{"addresses":["127.0.0.1"],"port":15443},"discovery":{"addresses":["{{.federationControllerIP}}"],"port":15020},"network":"west-network"}}'
        - --exportedServiceSet
        - '{"rules":[{"type":"LabelSelector","labelSelectors":[{"matchLabels":{"export-service":"true"}}]}]}'
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        ports:
        - name: grpc-mcp
          containerPort: 15010
        - name: grpc-fds
          containerPort: 15020
