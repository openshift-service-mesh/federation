apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- if .Values.istio.spire.enabled }}
        inject.istio.io/templates: "sidecar,{{ .Values.istio.spire.templateName }}"
      {{- end }}
        proxy.istio.io/config: |
          proxyMetadata:
            ISTIO_META_DNS_CAPTURE: "false"
            ISTIO_META_DNS_AUTO_ALLOCATE: "false"
      labels:
        {{- include "chart.labels" . | nindent 8 }}
        sidecar.istio.io/inject: "true"
    spec:
      serviceAccountName: {{ include "chart.name" . }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
        args:
        - '--meshPeers={{ .Values.federation.meshPeers | toJson }}'
        - '--exportedServiceSet={{ .Values.federation.exportedServiceSet | toJson }}'
        env:
        - name: CONTROLLER_SERVICE_FQDN
          value: "federation-discovery-service.{{ .Release.Namespace }}.svc.cluster.local"
        ports:
        - name: grpc-fds
          containerPort: 15080
