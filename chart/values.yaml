image:
  repository: quay.io/maistra-dev/federation-controller
  tag: latest

istio:
  spire:
    enabled: false
    templateName: spire

federation:
  meshPeers:
    local:
      # Name is a unique identifier of the peer used as its service name suffix.
      # Defaults to the helm release name.
      # name: "east"
      controlPlane:
        # Local control plane namespace is used to create local Istio configs (ServiceEntry for imported services,
        # Gateway for exported services, etc.).
        namespace: istio-system
      gateways:
        ingress:
          # Ingress gateway selector specifies to which workloads Gateway configurations will be applied.
          # selector:
          #   app: federation-ingress-gateway
          port:
            # Port name of the ingress gateway Service.
            # This is relevant only when the ingressType is openshift-router, but it cannot be empty.
            name: tls-passthrough
            # Port of the ingress gateway Service.
            number: 15443
      # Local ingress type specifies how to expose exported services.
      # Currently, only two types are supported: istio and openshift-router.
      # If "istio" is set, then the controller assumes that the Service associated with federation ingress gateway
      # is LoadBalancer or NodePort and is directly accessible for remote peers, and then it only creates
      # an auto-passthrough Gateway to expose exported Services.
      # When "openshift-router" is enabled, then the controller creates also OpenShift Routes and applies EnvoyFilters
      # to customize the SNI filter in the auto-passthrough Gateway, because the default SNI DNAT format used by Istio
      # is not supported by OpenShift Router.
      ingressType: istio
#    remotes:
#      # Name is a unique identifier of the peer used as its service name suffix.
#      - name: "west"
#        addresses:
#        - "192.168.0.1"
#        port: 15443 # default
#        # Remote ingress type specifies how to manage client mTLS.
#        # Currently, only two types are supported: istio and openshift-router.
#        # If "openshift-router" is set the controller applies DestinationRules with SNI compatible with OpenShift Router.
#        # If "istio" is set client mTLS settings are not modified.
#        # Defaults to "istio"
#        ingressType: istio
#        # Unique network name ensures that importing and exporting the same services will not result
#        # in routing requests to the cluster where the requests come from.
#        network: west-network
#  exportedServiceSet:
#    rules:
#    - type: LabelSelector
#      labelSelectors:
#      - matchLabels:
#          export-service: "true"
